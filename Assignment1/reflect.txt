Name: Glenn Parreno
Student number: 115 814 196
Email: geparreno@myseneca.ca
Section: IPC 144 NDD
Date: July 7, 2021

1) These are all the bugs I have encountered in the attempt to debug this program:

	Line 30, a1ms4 - struct Contact contact = { { { 0 } } };
	Correct one should be struct Contact contact = {{"", "", ""}, {0,"",0,"","" }, {"", "",""}}; because the Contact struct contains 3 other structs in it so you should add more braces containing 0 or blank values.

	Multiple appearances contacts.c - name->firstName
	Correct one is - &name->firstName. Some of them does not contain the & symbol. That symbol is needed to store data in the address.

	Line 57 contacts.c - if (yesNo == "y" || yesNo == "Y")
	if (yesNo == 'y' || yesNo == 'Y') is the correct code. What is wrong is that "Y" indicates that it is a string but yesNo is stored as a char so it should use a single apostrophe.

	Line 86 contacts.c - if (yesNo == 'y' && yesNo == 'Y')
	It should be if (yesNo == 'y' || yesNo == 'Y'). && this requires both conditions to be fullfilled which is imposible in this scenario that why its better to use this || which means either of them can eb okay.

	There was also many unnecassary for loop within the program that I removed.

	contacts.h - char middleInitial[5]
	I changed the amount of space to something bigger that 5 in order to allow me to store N. O. from the sample output. N. O. is really 5 characters the 5 in the declaration also considers space for the null terminator so its not enough.

2) The way the Contact should look like within the memory is struct that allocates spaces for 3 other datas which are also structs. Those other structs contained in the Contact struct contains other data such as ints, chars, and strings.

3)  The repeated code in contacts.c is scanf function that scans string to store. A way to avoid the repetitiveness of this is to make a function that scans strings and stores the string to its appropriate space by using pointer and arrays. It could work by calling that function and sending a pointer as a parameter. The function then saves the data to the address of the pointer.

4) What %*c means is to read the character and ignore it. It use in this program is to ignore whitespaces when we input values.

5) The reason why we use %[^\n] as a format specifier is so that the program will read everything until it hits a new line. Meaning that it will also read spaces which we need to do in this program. The reason why %s cannot be used is that it can't read spaces.
